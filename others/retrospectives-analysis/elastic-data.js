{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "","learnings": "Issue Aufbereitung ist seltsam. Acceptance Criteria und Beschreibungen passen nicht zusammen. Mehrere Issues greifen so stark ineinander, dass sie nicht getrennt abgearbeitet werden können. Wir 10 sind nicht mal 7. Arbeiten für andere Teams kosten Zeit","toimprove": "Im Backlog müssen mehr Issues aktueller und vorbereiteter sein. Zusätzlich was in den Sprint zu nehmen ist sonst nicht so einfach möglich. Im Retro jedes Issue mit Tags bewerten (Was ging gut, was ging nicht gut, was war toll, was nicht)","annoying": "Langläuferthemen. Tests die über mehrere Monate gehen. Kurz vor Release Testergebnisse plus Änderungen sofort und am besten Gestern. Zu große Punkte die nicht aufteilbar sind. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können","date": "2018-03-26"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Onboarding ist generell gut. Wenig reinnehmen war gut, da wir so die neuen Mitarbeiter Unterstützen konnten. Endlich Google Cloud","learnings": "Weniger rein nehmen war gut - war fast etwas zu wenig, aber lieber so als zu viel. Aufräumen, Umbennen usw war nicht so spannend. Muss halt sein, wenn man nicht von vornherein genau weiß wie/wo/was zu tun ist. Wir sollten mehr Onboarding machen - am Besten in der Planungswoche. Überblick Systeme - Datenfluss: Richtlinie innerhalb des Teams fehlt (wer? wo? was?). Tosca. MCS (Bereits in Planung). Im Retro die Wissenslücken besprechen und dann gleich aufnehmen. Verschätzen ist nicht mehr gang und gebe. Mehr interteamische Kommunikation. Gerüchte an Scrummaster - der nimmt sie mit und klärt diese im SOS","toimprove": "Ablauf Review und Merging. Staging","annoying": "Beauftragungsprozesse werden nicht eingehalten. Zusammenarbeit mit 'Nicht Scrumlern' ist noch nicht allen ganz klar. Querschläger per Telefon, Email, Skype, usw. Change/Service Request/Gespräch an PO. Prio Intern und extern:. ITS Prio: 1, OP: Prio 99. Langläuferthemen. Tests die über mehrere Monate gehen. Kurz vor Release Testergebnisse plus Änderungen sofort und am besten Gestern. Zu große Punkte die nicht aufteilbar sind. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würde. Zwei Proxies in der Übertragungskette blockieren dann sich selbst. HTTPS Forward Proxies fehlen noch. Proxyzertifikate die nicht funktionieren. Gmail Freigabe","date": "2018-03-12"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Onboarding im Icinga. Weniger rein nehmen war gut - nur dadurch haben wirh halbwegs überlebt","learnings": "Wir sollten mehr Onboarding machen - am Besten in der Planungswoche. Überblick Systeme - Datenfluss: Richtlinie innerhalb des Teams fehlt (wer? wo? was?). Im Retro die Wissenslücken besprechen und dann gleich aufnehmen. Verschätzen ist immer noch ein bisschen gang und gebe. Genauer Hinschauen. Mehr interteamische Kommunikation. Gerüche an Scrummaster - der nimmt sie mit und klärt diese im SOS","toimprove": "Ablauf Review und Merging. Staging. paar diskussionspunkte und mine meinung dazua:. mir müand an weag finda reviewer zum kennzeichna. mögliche lösunga:. assignee löscha bei verschieba in review und da reviewer trägt sich döt i. nochm review woass ma denn aber num, wer eigentlich dra gschaffat hot, wenn ma den ned wieder istellt.. review spliten zu needs review und in review. siat ma halt ned unbedingt wer da reviewer grad isch, aber ma siat, dass jemand dra isch. reviews sauber abarbeita. ned zu viele verschiedene punkte glichzittig reviewen und mergen (big bang) sondern einzeln und vollständig abarbeita. wenn oan punkt fertig isch und funktioniert, wird er abgschlossa und denn kut da nächste. Keine sinnlosen Sprints anlegen. Neue Sprints erst ind er Sprintplanung anlegen.. kleinere Stories - besser in kleinere Stories aufteilen. Punkte müssen geschätzt sein bevor sie in den Sprint gesetzt werden.. Kleine Stories, die am gleichen Tag abgeschlossen sind, selber schätzen. Größere beim nächsten Daily schätzen und dann in den Sprint aufnehmen. Informationen über neue Teammitglieder und Sitzplanänderungen im Daily weitergeben.  (Kommt aus dem GL Meetingsprotokoll)","annoying": "Beauftragungsprozesse werden nicht eingehalten. Zusammenarbeit mit nicht Scrumlern ist noch nicht allen ganz klar. Querschläger per Telefon, Email, Skype, usw. Change/Service Request/Gespräch an PO. Langläuferthemen. Tests die über mehrere Monate gehen. Kurz vor Release Testergebnisse plus Änderungen sofort und am besten Gestern. Zu große Punkte die nicht aufteilbar sind. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würde. Zwei Proxies in der Übertragungskette blockieren dann sich selbst. HTTPS Forward Proxies fehlen noch","date": "2018-02-26"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "funktionsübergreifender arbeiten. Onboarding im ELK war super! Siehe auch gelerntes","learnings": "Man kann auch mal krank werden. Wir sollten mehr Onboarding machen - am Besten in der Planungswoche. Überblick Systeme - Datenfluss: Richtlinie innerhalb des Teams fehlt (wer? wo? was?). Im Retro die Wissenslücken besprechen und dann gleich aufnehmen. Punkte müssen geschätzt sein bevor sie in den Sprint gesetzt werden. Kleine Stories die am gleichen Tag abgeschlosssen sind selber Schätzen. Größere beim nächsten Daily schätzen und dann in den Sprint aufnehmen","toimprove": "kleinere Stories - besser in kleinere Stories aufteilen. weniger Stories. Geplante Abwesenheiten einrechnen. Punkte müssen geschätzt sein bevor sie in den Sprint gesetzt werden.. Kleine Stories die am gleichen Tag abgeschlosssen sind selber Schätzen. Größere beim nächsten Daily schätzen und dann in den Sprint aufnehmen","annoying": "Beauftragungsprozesse werden nicht eingehalten. Zusammenarbeit mit nicht Scrumlern ist noch nicht allen ganz klar. Querschläger per Telefon, Email, Skype, usw. Change/Service Request/Gespräch an PO. Langläuferthemen. Tests die über mehrere Monate gehen. Kurz vor Release Testergebnisse plus Änderungen sofort und am besten Gestern. Zu große Punkte die nicht aufteilbar sind. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würde. Zwei Proxies in der Übertragungskette blockieren dann sich selbst","date": "2018-02-12"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "","learnings": "Sprints über Feiertage nicht produktiv - Pseudosprint. ohne Scrum Master keine Meetings","toimprove": "kleinere Stories. funktionsübergreifender arbeiten. Scrum besser leben - nicht alles an Scrum Master hängen lassen (Daily, Sprint Backlog, Meetings, etc.). Überblick Systeme - Datenfluss: Richtlinie innerhalb des Teams fehlt (wer? wo? was?)","annoying": "Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würde","date": "2018-01-16"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "weniger in den Sprint genommen. Reviews besser","learnings": "","toimprove": "Weniger in den Sprint nehmen.. Bei Schätzung mehr Zeit für Einarbeitung in neue Themen einkalkulieren. Besser Reviewen! https://wiki.xyz/display/dev/Java+Review+Checkliste. Beim Wechsel zu In Review. Doku ins Issue verlinken. Was wurde gemacht. z.B.: Testaufruf verlinken. Release TODOs angeben. Bei Status Änderungen in Issues im Kommentar dokumentieren. Speziell bei Wechseln von und zu Blocked, In Review, PO Ready","annoying": "Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würd. Performace Probleme im Inubit. Werden immer mehr. Viel Support in diesem Sprint. ISO lesen - zu viel. Altlasten - VAT Steuerermittlung","date": "2017-12-18"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Pair Programming/Pair Reviewing war gut - Einblicke in andere Systeme. Mehr Informationen vor In Review im Issue → siehe Was sollten wir anders machen.. PO Review möglichst schnell erledigen → selbst oder mit PO ","learnings": "Weniger in den Sprint zu nehmen ist super! Hütten wir dieses mal auch machen sollen.. Besser schauen wer wirklich da ist. Es ist wichtig Zuständigkeiten für Altlasten zu klären. StreamServe Verantwortlichkeiten. Edi Printserver und PDF Services müssen noch geklärt werden","toimprove": "Weniger in den Sprint nehmen.. Bei Schätzung mehr Zeit für Einarbeitung in neue Themen einkalkulieren. Besser Reviewen! https://wiki.xyz/display/dev/Java+Review+Checkliste. Beim Wechsel zu In Review. Doku ins Issue verlinken. Was wurde gemacht. z.B.: Testaufruf verlinken. Release TODOs angeben. Bei Status Änderungen in Issues im Kommentar dokumentieren. Speziell bei Wechseln von und zu Blocked, In Review, PO Ready","annoying": "Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Workarounds für 45 Minuten suchen, wenn die Arbeit 2 Minuten gehen würd. Performace Probleme im Inubit. Werden immer mehr. Viel Support in diesem Sprint. Wenig ungeplante Stories, viel ungeplanter Support","date": "2017-12-04"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Weniger in den Sprint zu nehmen ist super!. Pair Programming/Pair Reviewing war gut - Einblicke in andere Systeme. Mehr Informationen vor In Review im Issue → siehe Was sollten wir anders machen.. PO Review möglichst schnell erledigen → selbst oder mit PO","learnings": "Verschätzt! Zu viel Zeit für einlesen, Setup, Beispiele usw. Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Board auf Analog umgestellt -. Größeres Analogboard ist besser.. Ready for PO Review und PO Approved können verloren gehen. Landen nicht im Backlog und nicht im nächsten Sprint. PO hat Übersicht auf Ready for PO Review. Issues die nach PO Approved noch released werden müssen, müssen speziell beachtet werden","toimprove": "Bei Schätzung mehr Zeit für Einarbeitung in neue Themen einkalkulieren. Besser Reviewen! https://wiki.xyz/display/dev/Java+Review+Checkliste. Beim Wechsel zu In Review. Doku ins Issue verlinken. Was wurde gemacht. z.B.: Testaufruf verlinken. Release TODOs angeben. PO Review möglichst schnell erledigen → selbst oder mit PO","annoying": "Meetings. Scrumteamübergreifend sind die Meetings zu verschiedenen Zeiten (Morgens ich, Nachmittags der andere). Raumprobleme. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Viel Support in diesem Sprint. Wenig ungeplante Stories, viel ungeplanter Support","date": "2017-11-20"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Weniger in den Sprint zu nehmen ist super!. Auch Daily am Retro-Tag machen. Pair Programming war gut - Einblicke in andere Systeme","learnings": "Infrastruktur-Impediment wird noch lange offen sein. Nur ISO wichtig - egal ob Mitarbeiter arbeiten können. Board auf Digital umgestellt - weniger Overhead im Sprint. weniger angenehm im Daily. Beamer ist schlecht. Größeres Analogboard wäre eventuell besser.. Ready for PO Review und PO Approved können verloren gehen. Landen nicht im Backlog und nicht im nächsten Sprint. PO hat Übersicht auf Ready for PO Review. Issues die nach PO Approved noch released werden müssen, müssen speziell beachtet werden","toimprove": "Besser Reviewen! https://wiki.xyz/display/dev/Java+Review+Checkliste. Beim Wechsel zu In Review. Doku ins Issue verlinken. Was wurde gemacht. z.B.: Testaufruf verlinken. PO Review möglichst schnell erledigen → selbst oder mit PO ","annoying": "Meetings. Scrumteamübergreifend sind die Meetings zu verschiedenen Zeiten (Morgens ich, Nachmittags der andere). Raumprobleme. Meetingüberschneidungen. AI Managment JF wenn eigentlich Review sein soll. Infrastruktur-Probleme. Probleme beim Updaten Software. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). DEV Umgebungen sind nicht verwendbar. JNDI  ist von DEV nicht erreichbar. JNDI  muss laut DBA auf  eingerichtet sein.  - Keine DEV/TEST. Es kommen immer Sachen die nicht geplant sind. Abklärungen zwischen Teams sind nicht vorhanden. IWIS Amerika. Eigene Instanz. ISIS Bestandsabfrage wurde erweiter.  Webservice dazwischen wurde nicht beauftragt","date": "2017-11-06"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Auch extrem dringenede Stories nur wenn DoR erfüllt ist annehmen. Weniger in den Sprint nehmen","learnings": "Freischaltungstickets direkt in die entsprechenden Gruppen geben! nicht über SD. Alle Stories die externe Abhängikeiten haben und Netzwerkkonfigurationen brauchen, nicht schätzbar. Stories bleiben dann lange liegen, sind geblockt. Board auf Digital umgestellt - weniger Overhead im Sprint. Jenkins Onboarding ging los. Stories zum Klären scheint ein Storyfriedhof zu sein","toimprove": "Weniger in den Sprint nehmen. Auch Daily am Retro-Tag machen. Mehr Pair-Programming","annoying": "Meetings. Scrumteamübergreifend sind die Meetings zu verschiedenen Zeiten (Morgens ich, Nachmittags der andere). Raumprobleme. Infrastruktur-Probleme. TSE - Kaputt bei Developer. Probleme beim Updaten der VirtualBox der Proxy. Probleme mit CentOS. Weiterhin Proxy Probleme mit Dependencies. Proxyprobleme beim Builden von Angular. Test von DEV nicht erreichbar. TEST-APIs nicht erreichbar vom Jenkins. Gibt keine DEV Umgebung (Archiv). Freischaltungstickets gehen im PingPong hin und her. eBooking/iOrder Pilot Organisation. Es kommen immer Sachen die nicht geplant sind","date": "2017-10-23"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Klarere Stories bringen besseren Vortrieb","learnings": "Angular. Weniger in den Sprint nehmen","toimprove": "Auch extrem dringenede Stories nur wenn DoR erfüllt ist annehmen. Weniger in den Sprint nehmen. Reviews abschließen","annoying": "Meetings. Scrumteamübergreifend sind die Meetings zu verschiedenen Zeiten (Morgens ich, Nachmittags der andere). Raumprobleme. SSDs gehen kaputt. PO Laptop jetzt kaputt. Kompatibilitätsmodus im IE ist fürn Arsch. Wenn Entwicklertools aktiviert sind, funktioniert er anders als ohne. TSE IE nicht geeignet für moderne Webapplikationen. eBooking Pilot Organisation. Zuständigkeiten klären. iNet nachrennen. anderes Team Unterstützen. JIRA Release Versions. Probleme beim Release in Inubit. Unterstützung anderer Teams. MySQLDB im Portal. EDI Support bleibt zu viel. Probleme beim Updaten der VirtualBox der Proxy. Probleme mit CentOS. RZ hat Passwörter falsch gesetzt und verschickt. 2 Tage kein Zugriff auf SOOP9XL. Weiterhin Proxy Probleme mit Dependencies. Proxyprobleme beim Builden von Angular","date": "2017-10-09"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Wenn jemand gestört wird, hängt er sofort ein Postit auf, damit sichtbar wird, was stört und Zeit kostet.. Keine technischen Diskussionen im Daily.","learnings": "Altlasten und nicht direkte Zuständigkeiten müssen mehr abgewehrt werden. Portal-Kindermädchen","toimprove": "PI Manager DEV sollte funktionieren. Zeitnahere Wissensverteilung. Einplanen der Wissensverteilung. MCS ControlWorkflow mit Post Integration erstellen Released und Implementierung digi. Signatur / PDF-A für elektronische Ausgangsrechnung Released . unklare Konzepte. Wer bringt Konzept?. Konzept in einem Sprint erarbeiten. zu große Arbeitspakete. Mitten im Sprint aufgetaucht. Schulungsvorbereitungen mit einplanen. Netzwerkinfrastruktur ein Kampf. PO Planning sollte nicht zum geplanten Review termin gemacht werden ","annoying": "API Manager DEV funktioniert nicht. Server Wartungen werden nicht in der AI kommuniziert. STRS Wartungstermin kam durch Zufall in der Wartungswoche erst bei den STRS Verantwortlichen an. Ausnahme: DevOps Engineer → Termin der Wartungen an die Betroffenen","date": "2017-09-25"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Urlaub. Dailys konsequent durchgeführt. angenehmes Arbeiten im Team","learnings": "","toimprove": "Arbeitspakete feiner runterbrechen. Rollenverständnis wird nicht gelebt","annoying": "","date": "2017-09-11"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Urlaub","learnings": "","toimprove": "Dailys konsequent durchführen. den Sprint","annoying": "","date": "2017-08-28"}
{ "index" : { "_index" : "retrospectives", "_type" : "retrospective"} }
{"gooddecisions": "Storypoint Schätzung war einfacher. Teamgefühl kommt auf. Physisches Taskboard. Teamname Gut. Progress gut getracked","learnings": "","toimprove": "Taskboards digital und physisch asynchron. Assignment-Moral lässt zu wünschen übrig","annoying": "","date": "2017-08-14"}
